---
title: "Counterfactual Estimation via ```mlsynth```"
author: "Jared Greathouse"
date: today
format: 
  revealjs:
    scrollable: true
theme: simple
highlight-style: github
---


## Counterfactual Estimation

- Whether we're in business or government, maximizing value for business services and crafting effective public policy depends on knowing whether policies, promotions, new web features, or other interventions meaningfully affect metrics that we care about.

- Researchers commonly use Difference-in-Differences designs and Synthetic Control methods (DID and SCM) to measure causal impacts.

- Both approaches in principle use weighted averages of control groups in the pre-treatment period to predict post-intervention counterfactuals, or the values of the outcome we'd see absent the treatment.

---

## Counterfactual Estimation cont.

However, they may struggle sometimes.

- SCM struggles with high-dimensional datasets. Often, smaller donor pools are preferable to very large ones to mitigate overfitting biases. But picking a good donor pool can be challenging when there are very many controls.

- SCM solutions are often sparse, given the classical formulation of the problem's weights are nonnegative and add to 1.

- May be implausbile when the true vector coefficient is not 0.

- DID requires $\mathbb{E}[y_{1t}(0)] - \mathbb{E}[y_{\mathcal{N}_0 t}(0)] = \mathbb{E}[y_{1t-1}(0)] - \mathbb{E}[y_{\mathcal{N}_0 t-1}(0)]$, or parallel trends. May not always hold, particularly in small $N$, large $T$ setings).

---

## Potential Solutions

- Econometricians have crafted methods which attempt to address all of these in some way.

---

## Benefits of mlsynth

- **Forward Difference-in-Differences (FDID)**
  - Better parallel trends
- **$\ell_2$ Relaxer**
  - Handles multicollinearity better than LASSO.
- **Robust PCA SCM**
  - Uses better PCA

---

## Example: FDID in Action

```{python results="markup"}
print("I am Jared")
