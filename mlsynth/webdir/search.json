[
  {
    "objectID": "mlsynthlanding.html",
    "href": "mlsynthlanding.html",
    "title": "MLSYNTH",
    "section": "",
    "text": "This is the landing page for the mini-ecosystem mlsynth. In terms of the raw number of synthetic control estimators, it is the largest open source library that exists.\nContributors: Jared Greathouse\nStatus: Beta version released. Documentation and app are in active development."
  },
  {
    "objectID": "mlsynthlanding.html#philosophy",
    "href": "mlsynthlanding.html#philosophy",
    "title": "MLSYNTH",
    "section": "Philosophy",
    "text": "Philosophy\nThe mlsynth library implements machine learning–based synthetic control estimators with a focus on simplicity and flexibility. Unlike other libraries that require juggling multiple methods for data prep, fitting, prediction, and plotting, mlsynth streamlines everything into a single .fit() call. All estimator options are passed through a configuration dictionary, allowing you to switch between models or classes with minimal code changes. For example,\n\n# Forward SCM, Forward Augmented SCM, and Forward Differnece-in-Differences\n\nimport pandas as pd\nfrom mlsynth import FSCM, FDID\n\nurl = \"https://raw.githubusercontent.com/jgreathouse9/mlsynth/refs/heads/main/basedata/smoking_data.csv\"\ndata = pd.read_csv(url)\n\n# base config\nconfig = {\n    \"df\": data,\n    \"outcome\": data.columns[2],\n    \"treat\": data.columns[-1],\n    \"unitid\": data.columns[0],\n    \"time\": data.columns[1],\n    \"display_graphs\": True,\n    \"save\": False,\n    \"counterfactual_color\": [\"red\"]\n}\n\n# Forward SCM\narco = FSCM(config).fit()\n\n# Augmented Forward SCM\nconfig_aug = dict(config)\nconfig_aug[\"use_augmented\"] = True\narco_aug = FSCM(config_aug).fit()\n\n# Forward Difference-in-Differences\nfdid = FDID(config).fit()\n\nruns two different flavors of the Forward Selected SCM and Forward DID.\nFurthermore, we can do this with essentially zero change in the data structure or input requirements beyond simple changes to a dictionary. Each .fit() call returns a comprehensive BaseEstimatorResults object containing treatment effects, fit diagnostics (e.g., RMSE, R-squared), time-series data, and (where applicable) donor weights, ready for analysis or visualization.\nmlsynth is also customizable too. For advanced users, mlsynth’s design has a submodule for each class, and each class has its own unique configuration dictionary. This mean that if you want to add your very own proprietary method, you need only add it to the base models, update the init.py locally/forked at your own repo, and take advantage of the existing helpers/utils to make a brand new method."
  },
  {
    "objectID": "mlsynthlanding.html#github-repo",
    "href": "mlsynthlanding.html#github-repo",
    "title": "MLSYNTH",
    "section": "GitHub Repo",
    "text": "GitHub Repo\nHere is the GitHub repo. You may install mlsynth by doing\npip install -U git+https://github.com/jgreathouse9/mlsynth.git\nin your terminal."
  },
  {
    "objectID": "mlsynthlanding.html#documentation",
    "href": "mlsynthlanding.html#documentation",
    "title": "MLSYNTH",
    "section": "Documentation",
    "text": "Documentation\nHere is the link to the documentation."
  },
  {
    "objectID": "mlsynthlanding.html#app",
    "href": "mlsynthlanding.html#app",
    "title": "MLSYNTH",
    "section": "App",
    "text": "App\nHere is the beta version of the app which runs many of the mlsynth estimators."
  },
  {
    "objectID": "mlsynthlanding.html#projects",
    "href": "mlsynthlanding.html#projects",
    "title": "MLSYNTH",
    "section": "Projects:",
    "text": "Projects:\nHere are the projects which use mlsynth. Please let me know if yours does and I will add it!\nEconomic Impact of Cameroon’s Anglophone Crisis: A Forward Difference-in-Differences Approach (forthcoming)"
  }
]