---
title: "Counterfactual Estimation via ```mlsynth```"
author: "Jared Greathouse"
date: today
format: revealjs
theme: simple
highlight-style: github
---

## Counterfactual Estimation

- Counterfactual estimation is an important econometric problem. Much of what governments and businesses do is predicated on specific policy interventions having an effect on some outcome.
- Methods such as Difference-in-Differences and Synthetic Control Methods (DID and SCM) are often used to estimate counterfactuals, where some set of units are treated at one time point, and others are not treated. Both methods are predicated on using weighted averages of control groups in the pre-treatment period to predict the the post-intervention/out-of-sample values, or the values we would've seen absent treatment.
- However, existing methods have may struggle in certain instances:
  - SCM struggles with very many controls, even with the convex hull regularization constraint. Often, smaller donor pools are prefereable to very large ones, and we must carefully choose which donors/control groups we use.
  - Similarly, DID requires $\mathbb{E}[y_{1t}(0)] - \mathbb{E}[y_{\mathcal{N}_0 t}(0)] = \mathbb{E}[y_{1t^{\prime}}(0)] - \mathbb{E}[y_{\mathcal{N}_0 t^{\prime}}(0)]$.

---

## Problems with Existing Approaches

- **LASSO & SCM Issues**:
  - Overfitting and unstable counterfactual estimates.
  - Difficulty in high-dimensional datasets.
- **Need for better model averaging**:
  - Combining estimates improves accuracy.
  - Jensenâ€™s Inequality reduces RMSE.

---

## Benefits of mlsynth

- **Forward Difference-in-Differences (FDID)**
  - Better parallel trends
- **$\ell_2$ Relaxer**
  - Handles multicollinearity better than LASSO.
- **Robust PCA SCM**
  - Uses better PCA
---

## Example: FDID in Action

```{python results="markup"}
print("I am Jared")
```
