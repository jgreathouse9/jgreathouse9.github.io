---
title: 'Synthetic Controls in Dense Settings: the $\ell_2$ relaxer'
date: 2025-01-24
---

Plenty of posts have been done in the last decade on [the synthetic control method](https://doi.org/10.1198/jasa.2009.ap08746) and related approaches; folks from [Microsoft](https://medium.com/data-science-at-microsoft/causal-inference-using-synthetic-controls-d96a890c83a7), [Databricks](https://towardsdatascience.com/how-to-do-causal-inference-using-synthetic-controls-ab435e0228f1), [Uber](https://youtu.be/j5DoJV5S2Ao?si=RWUYFjFEWpvkl8x1), [Amazon](https://towardsdatascience.com/causal-inference-with-synthetic-control-in-python-4a79ee636325), [Netflix](https://netflixtechblog.com/round-2-a-survey-of-causal-inference-applications-at-netflix-fd78328ee0bb), [Gainwell Technologies](https://andrewpwheeler.com/2019/12/06/using-regularization-to-generate-synthetic-controls-and-conformal-prediction-for-significance-tests/), and [else](https://rudrendupaul.medium.com/causal-inference-part-7-synthetic-control-methods-a-powerful-technique-for-inferring-causality-in-3ec5dbe26038)[where](https://henamsingla.medium.com/synthetic-control-method-a-z-d28099c56edb) have gone over it, detailing different aspects of the method. Many (not of course [not all](https://peerunreviewed.blogspot.com/2019/11/a-short-tutorial-on-robust-synthetic.html)) of these go over the standard SCM. Broadly, the original SCM tends to favor, under certain technical conditions, a sparse set of control units being the underlying weights that reconstruct the factor loadings/observed values of the treated unit, pre-intervention. And while sparsity has plenty of appealing properties, such as our ability to interpret the synthetic control, sometimes this advice simply breaks down because [in some cases](https://ceistorvergata.it/public/files/RFCS/Giannone_illusion4-2.pdf) the sparsity notion is wrong. In other words, most of the coefficeints being 0 is a notion that cannot be defended. So in this post, I demonstrate [the $\ell_2$ panel data approach](https://mlsynth.readthedocs.io/en/latest/pda.html#ell-2-relaxation), an econometric methodology very recently developed by [Zhentao Shi](https://zhentaoshi.github.io/) and [Yishu Wang](https://ishwang1.github.io/) which accommodates a dense data generation processes, or when the true vector of coefficient is mostly not zero.  The Python code for these results may be found [here](https://github.com/jgreathouse9/jgreathouse9.github.io/tree/master/blogcontent/scdense).

> **Note:**  
This post goes over an extended empirical example. To see the simple and fast way to use this method, you can go to [the Python documentation](https://mlsynth.readthedocs.io/en/latest/pda.html#ell-2-relaxation) of this method in my packiage ``mlsynth`` which is both slightly more technical and a lot shorter than I'll be here.

# A Review of Synthetic Controls

Let $t \in \mathbb{N}$ and $i \in \mathbb{N}$ be the time unit indices for our outcomes, $y_{it}$. Let $i = 1$ represent the treated unit, and let the remaining units, $N_0$ in total, form the control group, which remains untreated. The key challenge of causal inference is that we only have factual outcomes, which are defined as $y_{it} = y_{it}^1 d_{it} + \left(1 - d_{it}\right)y_{it}^0$, where $d_{it}$ is an indicator for whether the unit is treated ($d_{it} = 1$) or untreated ($d_{it} = 0$). An intervention occurs after time $T_{0}$, such that set $\mathcal{T}\_{1} = \\{1, 2, \ldots, T_0\\}$ corresponds to the pre-treatment period, and set $\mathcal{T}\_{2} = \\{T_0 + 1, \ldots, T\\}$ corresponds to the post-treatment period. Denote $\mathbb{I} := \{ w \in \mathbb{R} : 0 \leq w \leq 1 \}.$ The objective is to estimate the counterfactual $y_{1t}^0$ for the post-treatment period, or the values we would see if the treatment did not happen.

The original SCM proposes to  use least-squares regression to estimate the weights, $\mathbf{w} \in \mathbb{I}^{N_0}$ subject to $\lVert \mathbf{w} \rVert_1 = 1$. Here, the Individual columns of the donor pool matrix, denoted like $\mathbf{Y}_0 \in \mathbb{R}^{N_0 \times T}$, are our independent variables which are multiplied by their respective weights and then added (in matrix math we'd call this the dot product). Naturally, the pre-treatment outcome vector of our treated unit, $\mathbf{y}_1 \in \mathbb{R}^{1 \times T}$, is the dependent variable. A good synthetic control satisfies $\mathbf{w}^\top \mathbf{Y}_0 \approx \mathbf{y}_1$, or good pre-treatment fit with respect to the treated unit vector.
