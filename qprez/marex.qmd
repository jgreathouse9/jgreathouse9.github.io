---
title: "Causal Inference and Market Experiment Design with MLSYNTH"
format: revealjs
---

# Introduction

Jared Amani Greathouse  
- PhD Candidate, Public Policy, Georgia State University  
- Advisor: Jason Coupet  
- Specialization: Econometrics and Causal Inference  
- Focus: Synthetic Control Methods, High-Dimensional Panel Data, Machine Learning for Treatment Effects  

---

## My Work

- Developed mlsynth, the largest Python SCM package to date  
- Suite of tools for policy evaluation using panel data  
- Supports dozens of estimators: vanilla SCM, cluster SCM, factor models, PDA, proximal SCM, and more  
- Handles complex, high-dimensional causal inference settings  

---

## What Makes MLSYNTH Special

- Consolidates decades of non-experimental SCM and panel methods from multiple software ecosystems into Python with one singular syntax  
- Easy installation, automation, and scaling  
- Supports a broad set of estimators for diverse research questions  
- MAREX: Market Experiment Design feature for selecting treated and control units under constraints  
- Decision-making tool: explore multiple scenarios with penalties, clusters, costs, budgetsâ€”overnight simulations possible  

---

## Challenges of Standard Experiments

- Randomized trials are often impractical at scale  
  - High coordination and cost  
  - Ethical or logistical constraints  
- Simple randomization ignores pre-existing heterogeneity  
- Cannot easily accommodate budgets, costs, or cluster structures  
- Slow to iterate: each new design requires manual planning  

---

## Why Prefer MAREX

- Optimizes both treated and control selection simultaneously  
- Enforces cluster structure, budgets, and cardinality constraints  
- Penalizes units far from cluster means to ensure representativeness  
- Allows overnight simulation of multiple experimental scenarios  
- Treats synthetic control as a planning tool, not just an estimator  

---

## MAREX vs. Standard Experiment

| Feature                                     | Standard Experiment                       | MAREX                                                 |
| ------------------------------------------- | ----------------------------------------- | ----------------------------------------------------- |
| Validity in small/clustered marketing tests | Often compromised                         | Maintains validity via synthetic control optimization |
| Budget-aware                                | Sometimes requires ad hoc adjustments     | Built-in into optimization                            |
| Cluster-aware                               | Possible but may reduce power             | Enforced and balanced by design                       |
| Ethical / feasibility constraints           | Manual adjustments                        | Integrated constraints                                |
| Scenario testing / iteration                | Limited by randomization and manual setup | Overnight simulations with multiple configurations    |
| Representativeness of treated/control       | Needs careful design, can fail            | Ensured via cluster-weighted synthetic controls       |
---

## An Example

```{python}

#| echo: false

from mlsynth import MAREX
import pandas as pd
import matplotlib.pyplot as plt
from mlsynth.utils.exputils import plot_cluster_full


df = pd.read_csv("https://raw.githubusercontent.com/jgreathouse9/mlsynth/refs/heads/main/basedata/Curacao_EXP_922.csv")
df_pre = df[df["time"] <= 120].copy()
df["Region"]=0

config = {"df": df,
          "unitid": "town",
          "time": "time",
          "outcome": "Y_obs",
          "T0": 128,
          "m_min": 1,
          "m_max": 5,
          "cluster": "Region",
          "program_type": "MIQP", "blank_periods": 28}

design = MAREX(config).fit()

plot_cluster_full(df,design)
```

## Takeaway

- MAREX is a planning tool for experiments where randomization is expensive, infeasible, or restricted  
- Makes representative, feasible, and comparable treatment assignments  
- Analysts can simulate, optimize, and justify experimental decisions before implementation  
- Bridges econometrics theory and practical business experiment design
